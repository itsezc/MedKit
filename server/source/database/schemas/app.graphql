scalar DateTime

type Account @key(fields: "id") {
	id: ID
	email: String
	phone: String
	password: String
	firstName: String
	lastName: String
	DateTimeOfBirth: DateTime
	weight: Float
}

type LoginPayload {
	token: String
}

type Activity {
	name: String
	tag: String
	time: DateTime
}

type Activities {
	date: DateTime
	activities: [Activity]
}

type Symptom {
	id: ID
	name: String
}

type Medicine {
	name: String
	description: String
}

type Ingredient {
	name: String 
	image: String
}

type Reciepe {
	name: String
	image: String
	ingredient: [Ingredient]
	createdAt: DateTime
}

extend type Mutation {
	login(
		email: String!, 
		password: String!,
		deviceID: String!
	): LoginPayload

	register(
		email: String!, 
		password: String!,
		passwordConfirm: String!,
		firstName: String!,
		lastName: String!,
		dateOfBirth: DateTime!,
		deviceID: String!
	): LoginPayload
}

extend type Query {
	getUser: Account
	getActivities: [Activities]
	getReciepes: [Reciepe]
	getSymptoms(current: [ID]): [Symptom]
	getSymptom(name: String!): Symptom
	getTopMedicines: [Medicine]
	searchMedicine(term: String!): Medicine
}