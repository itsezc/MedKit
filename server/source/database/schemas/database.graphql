type Account @rootEntity {
    email: String @unique
    phone: String
    phoneExt: String
    password: String
    firstName: String
    lastName: String
    dateOfBirth: DateTime
    weight: Float
    activities: [Activities] @relation
}

type Chat @rootEntity {
	possibilities: [Disease] @relation
	user: [Account] @relation
}

type Activities @rootEntity {
	name: String
	time: DateTime
	tag: String
	account: Account @relation(inverseOf: "activities")
}

type Doctor @rootEntity {
	email: String @unique
	password: String
}

type Disease @rootEntity {
	name: String @unique
	symptoms: [Symptom] @relation
	treatments: [Treatment] @relation
	medication: [Medication] @relation
}

type Symptom @rootEntity {
	name: String @unique
	description: String
	diseases: [Disease] @relation(inverseOf: "symptoms")
}

type Treatment @rootEntity {
	method: String
	diseases: [Disease] @relation(inverseOf: "treatments")
	minAge: Int
}

type Medication @rootEntity {
	name: String
	minAge: Int
	diseases: [Disease] @relation(inverseOf: "medication")
}